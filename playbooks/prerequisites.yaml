- hosts: all
  gather_facts: true
  vars_files:
    - cnc_values.yaml
  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ https_proxy }}"
  tasks:
    - name: Validate whether Kubernetes cluster installed
      shell: kubectl cluster-info
      register: k8sup
      no_log: True
      failed_when: false

    - name: Add an Kubernetes apt signing key for Ubuntu
      become: true
      when: "ansible_distribution == 'Ubuntu' and 'running' not in k8sup.stdout"
      apt_key:
        url: "{{ k8s_apt_key }}"
        state: present

    - name: Adding Kubernetes apt repository for Ubuntu
      become: true
      when: "ansible_distribution == 'Ubuntu' and 'running' not in k8sup.stdout"
      apt_repository:
        repo: "{{ k8s_apt_repository }}"
        state: present
        filename: kubernetes

    - name: Install kubernetes components for Ubuntu on NVIDIA Cloud Native Stack 5.0
      become: true
      when: "cnc_version == 5.2 or cnc_version == 5.1 or cnc_version == 5.0 and ansible_distribution == 'Ubuntu'"
      apt:
        name: ['net-tools', 'apt-transport-https', 'curl', 'ca-certificates', 'gnupg-agent' ,'software-properties-common', 'kubelet=1.22.5-00', 'kubeadm=1.22.5-00', 'kubectl=1.22.5-00']
        state: present
        update_cache: true
        allow_change_held_packages: yes
        force: yes

    - name: Install kubernetes components for Ubuntu on NVIDIA Cloud Native Stack 6.0
      become: true
      when: "cnc_version == 6.0 and ansible_distribution == 'Ubuntu'"
      apt:
        name: ['net-tools', 'apt-transport-https', 'curl', 'ca-certificates', 'gnupg-agent' ,'software-properties-common', 'kubelet=1.23.2-00', 'kubeadm=1.23.2-00', 'kubectl=1.23.2-00']
        state: present
        update_cache: true
        allow_change_held_packages: yes
        force: yes

    - name: Install kubernetes components for Ubuntu on NVIDIA Cloud Native Stack 6.1
      become: true
      when: "cnc_version == 6.1 and ansible_distribution == 'Ubuntu'"
      apt:
        name: ['net-tools', 'apt-transport-https', 'curl', 'ca-certificates', 'gnupg-agent' ,'software-properties-common', 'kubelet=1.23.5-00', 'kubeadm=1.23.5-00', 'kubectl=1.23.5-00']
        state: present
        update_cache: true
        allow_change_held_packages: yes
        force: yes

    - name: Install kubernetes components for Ubuntu on NVIDIA Cloud Native Stack 6.2
      become: true
      when: "cnc_version == 6.2 and ansible_distribution == 'Ubuntu'"
      apt:
        name: ['net-tools', 'apt-transport-https', 'curl', 'ca-certificates', 'gnupg-agent' ,'software-properties-common', 'kubelet=1.23.10-00', 'kubeadm=1.23.10-00', 'kubectl=1.23.10-00']
        state: present
        update_cache: true
        allow_change_held_packages: yes
        force: yes

    - name: Install kubernetes components for Ubuntu on NVIDIA Cloud Native Stack 6.3
      become: true
      when: "cnc_version == 6.3 and ansible_distribution == 'Ubuntu'"
      apt:
        name: ['net-tools', 'apt-transport-https', 'curl', 'ca-certificates', 'gnupg-agent' ,'software-properties-common', 'kubelet=1.23.12-00', 'kubeadm=1.23.12-00', 'kubectl=1.23.12-00']
        state: present
        update_cache: true
        allow_change_held_packages: yes
        force: yes

    - name: Install kubernetes components for Ubuntu on NVIDIA Cloud Native Stack 6.4
      become: true
      when: "cnc_version == 6.4 and ansible_distribution == 'Ubuntu'"
      apt:
        name: ['net-tools', 'apt-transport-https', 'curl', 'ca-certificates', 'gnupg-agent' ,'software-properties-common', 'kubelet=1.23.14-00', 'kubeadm=1.23.14-00', 'kubectl=1.23.14-00']
        state: present
        update_cache: true
        allow_change_held_packages: yes
        force: yes

    - name: Install kubernetes components for Ubuntu on NVIDIA Cloud Native Stack 7.0
      become: true
      when: "cnc_version == 7.0 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '22'"
      apt:
        name: ['net-tools', 'apt-transport-https', 'curl', 'ca-certificates', 'gnupg-agent' ,'software-properties-common', 'kubelet=1.24.2-00', 'kubeadm=1.24.2-00', 'kubectl=1.24.2-00']
        state: present
        update_cache: true
        allow_change_held_packages: yes
        force: yes

    - name: Install kubernetes components for Ubuntu on NVIDIA Cloud Native Stack 7.1
      become: true
      when: "cnc_version == 7.1 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '22'"
      apt:
        name: ['net-tools', 'apt-transport-https', 'curl', 'ca-certificates', 'gnupg-agent' ,'software-properties-common', 'kubelet=1.24.6-00', 'kubeadm=1.24.6-00', 'kubectl=1.24.6-00']
        state: present
        update_cache: true
        allow_change_held_packages: yes
        force: yes

    - name: Install kubernetes components for Ubuntu on NVIDIA Cloud Native Stack 7.2
      become: true
      when: "cnc_version == 7.2 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '22'"
      apt:
        name: ['net-tools', 'apt-transport-https', 'curl', 'ca-certificates', 'gnupg-agent' ,'software-properties-common', 'kubelet=1.24.8-00', 'kubeadm=1.24.8-00', 'kubectl=1.24.8-00']
        state: present
        update_cache: true
        allow_change_held_packages: yes
        force: yes

    - name: Install kubernetes components for Ubuntu on NVIDIA Cloud Native Stack 8.0
      become: true
      when: "cnc_version == 8.0 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '22'"
      apt:
        name: ['net-tools', 'apt-transport-https', 'curl', 'ca-certificates', 'gnupg-agent' ,'software-properties-common', 'kubelet=1.25.2-00', 'kubeadm=1.25.2-00', 'kubectl=1.25.2-00']
        state: present
        update_cache: true
        allow_change_held_packages: yes
        force: yes

    - name: Install kubernetes components for Ubuntu on NVIDIA Cloud Native Stack 8.1
      become: true
      when: "cnc_version == 8.1 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '22'"
      apt:
        name: ['net-tools', 'apt-transport-https', 'curl', 'ca-certificates', 'gnupg-agent' ,'software-properties-common', 'kubelet=1.25.4-00', 'kubeadm=1.25.4-00', 'kubectl=1.25.4-00']
        state: present
        update_cache: true
        allow_change_held_packages: yes
        force: yes

    - name: Hold the installed Packages
      become: true
      when: "ansible_distribution == 'Ubuntu'"
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      with_items:
        - kubelet
        - kubectl
        - kubeadm

    - name: Validate whether Kubernetes cluster installed
      shell: kubectl cluster-info
      register: k8sup
      no_log: True
      failed_when: false

    - name: Remove swapfile from /etc/fstab
      become: true
      when: "'running' not in k8sup.stdout"
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      become: true
      when: "'running' not in k8sup.stdout"
      command: swapoff -a

    - name: Setup Containerd for Ubuntu
      become: true
      block:
        - name: Create containerd.conf
          lineinfile:
            create: yes
            mode: 666
            path: /etc/modules-load.d/containerd.conf
            line: "{{ item }}"
          loop:
            - "overlay"
            - "br_netfilter"

        - name: Modprobe for overlay and br_netfilter
          modprobe:
            name: "{{ item }}"
            state: present
          ignore_errors: true
          loop:
          - "overlay"
          - "br_netfilter"

        - name: Add sysctl parameters to /etc/sysctl.conf
          sysctl:
            name: "{{ item.name }}"
            value: "{{ item.value }}"
            state: present
            reload: "{{ item.reload }}"
          loop:
            - {name: "net.bridge.bridge-nf-call-ip6tables", value: "1", reload: no}
            - {name: "net.bridge.bridge-nf-call-iptables", value: "1", reload: no}
            - {name: "net.ipv4.ip_forward", value: "1", reload: yes}

        - name: Install libseccomp2
          apt:
            name: libseccomp2
            state: present
            update_cache: yes

        - name: Create /etc/containerd
          file:
            path: /etc/containerd
            state: directory

        - name: Create /etc/default/kubelet
          lineinfile:
            line: KUBELET_EXTRA_ARGS=--cgroup-driver=systemd --container-runtime=remote --container-runtime-endpoint="unix:/run/containerd/containerd.sock"
            path: /etc/default/kubelet
            create: yes
      when: "cnc_version >= 4.0 and ansible_distribution == 'Ubuntu'"

    - name: Install Containerd for NVIDIA Cloud Native Stack 5.0
      become: true
      block:
        - name: Download cri-containerd-cni
          get_url:
            url: https://github.com/containerd/containerd/releases/download/v1.4.9/cri-containerd-cni-1.4.9-linux-amd64.tar.gz
            dest: /tmp/cri-containerd-cni-1.4.9-linux-amd64.tar.gz
            mode: 0664

        - name: Untar cri-containerd-cni
          unarchive:
            src: /tmp/cri-containerd-cni-1.4.9-linux-amd64.tar.gz
            dest: /
            remote_src: yes
            extra_opts:
              - --no-overwrite-dir
      when: "cnc_version == 5.2 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '20' and ansible_architecture == 'x86_64' or cnc_version == 5.1 or cnc_version == 5.0 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '20' and ansible_architecture == 'x86_64'"

    - name: Install Containerd for NVIDIA Cloud Native Stack 6.0
      become: true
      block:
        - name: Download cri-containerd-cni
          get_url:
            url: https://github.com/containerd/containerd/releases/download/v1.6.0/cri-containerd-cni-1.6.0-linux-amd64.tar.gz
            dest: /tmp/cri-containerd-cni-1.6.0-linux-amd64.tar.gz
            mode: 0664

        - name: Untar cri-containerd-cni
          unarchive:
            src: /tmp/cri-containerd-cni-1.6.0-linux-amd64.tar.gz
            dest: /
            remote_src: yes
            extra_opts:
              - --no-overwrite-dir
      when: "cnc_version == 6.0 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '20' and ansible_architecture == 'x86_64'"

    - name: Install Containerd for NVIDIA Cloud Native Stack 6.1
      become: true
      block:
        - name: Download cri-containerd-cni
          get_url:
            url: https://github.com/containerd/containerd/releases/download/v1.6.2/cri-containerd-cni-1.6.2-linux-amd64.tar.gz
            dest: /tmp/cri-containerd-cni-1.6.2-linux-amd64.tar.gz
            mode: 0664

        - name: Untar cri-containerd-cni
          unarchive:
            src: /tmp/cri-containerd-cni-1.6.2-linux-amd64.tar.gz
            dest: /
            remote_src: yes
            extra_opts:
              - --no-overwrite-dir
      when: "cnc_version == 6.1 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '20' and ansible_architecture == 'x86_64'"

    - name: Install Containerd for NVIDIA Cloud Native Stack 6.2
      become: true
      block:
        - name: Download cri-containerd-cni
          get_url:
            url: https://github.com/containerd/containerd/releases/download/v1.6.5/cri-containerd-cni-1.6.5-linux-amd64.tar.gz
            dest: /tmp/cri-containerd-cni-1.6.5-linux-amd64.tar.gz
            mode: 0664

        - name: Untar cri-containerd-cni
          unarchive:
            src: /tmp/cri-containerd-cni-1.6.5-linux-amd64.tar.gz
            dest: /
            remote_src: yes
            extra_opts:
              - --no-overwrite-dir
      when: "cnc_version == 6.2 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '20' and ansible_architecture == 'x86_64'"

    - name: Install Containerd for NVIDIA Cloud Native Stack 7.0
      become: true
      block:
        - name: Download cri-containerd-cni
          get_url:
            url: https://github.com/containerd/containerd/releases/download/v1.6.6/cri-containerd-cni-1.6.6-linux-amd64.tar.gz
            dest: /tmp/cri-containerd-cni-1.6.6-linux-amd64.tar.gz
            mode: 0664

        - name: Untar cri-containerd-cni
          unarchive:
            src: /tmp/cri-containerd-cni-1.6.6-linux-amd64.tar.gz
            dest: /
            remote_src: yes
            extra_opts:
              - --no-overwrite-dir
      when: "cnc_version == 7.0 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '20' and ansible_architecture == 'x86_64'"

    - name: Install Containerd for NVIDIA Cloud Native Stack 6.3 or 7.1 or 8.0
      become: true
      block:
        - name: Download cri-containerd-cni
          get_url:
            url: https://github.com/containerd/containerd/releases/download/v1.6.8/cri-containerd-cni-1.6.8-linux-amd64.tar.gz
            dest: /tmp/cri-containerd-cni-1.6.8-linux-amd64.tar.gz
            mode: 0664

        - name: Untar cri-containerd-cni
          unarchive:
            src: /tmp/cri-containerd-cni-1.6.8-linux-amd64.tar.gz
            dest: /
            remote_src: yes
            extra_opts:
              - --no-overwrite-dir
      when: "cnc_version == 6.3 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '20' and ansible_architecture == 'x86_64' or cnc_version == 7.1 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '20' and ansible_architecture == 'x86_64' or cnc_version == 8.0 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '20' and ansible_architecture == 'x86_64'"

    - name: Install Containerd for NVIDIA Cloud Native Stack 6.4 or 7.2 or 8.1
      become: true
      block:
        - name: Download cri-containerd-cni
          get_url:
            url: https://github.com/containerd/containerd/releases/download/v1.6.10/cri-containerd-cni-1.6.10-linux-amd64.tar.gz
            dest: /tmp/cri-containerd-cni-1.6.10-linux-amd64.tar.gz
            mode: 0664

        - name: Untar cri-containerd-cni
          unarchive:
            src: /tmp/cri-containerd-cni-1.6.10-linux-amd64.tar.gz
            dest: /
            remote_src: yes
            extra_opts:
              - --no-overwrite-dir
      when: "cnc_version == 6.4 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '20' and ansible_architecture == 'x86_64'  or cnc_version == 7.2 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '20' and ansible_architecture == 'x86_64' or cnc_version == 8.1 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '20' and ansible_architecture == 'x86_64'"

    - name: Install Containerd for NVIDIA Cloud Native Stack 6.0
      become: true
      block:
        - name: Download cri-containerd-cni
          get_url:
            url: https://github.com/containerd/containerd/releases/download/v1.6.0/cri-containerd-cni-1.6.0-linux-arm64.tar.gz
            dest: /tmp/cri-containerd-cni-1.6.0-linux-arm64.tar.gz
            mode: 0664

        - name: Untar cri-containerd-cni
          unarchive:
            src: /tmp/cri-containerd-cni-1.6.0-linux-arm64.tar.gz
            dest: /
            remote_src: yes
            extra_opts:
              - --no-overwrite-dir
      when: "cnc_version == 6.0 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '20' and ansible_architecture == 'aarch64'"

    - name: Install Containerd for NVIDIA Cloud Native Stack 6.1
      become: true
      block:
        - name: Download cri-containerd-cni
          get_url:
            url: https://github.com/containerd/containerd/releases/download/v1.6.2/cri-containerd-cni-1.6.2-linux-arm64.tar.gz
            dest: /tmp/cri-containerd-cni-1.6.2-linux-arm64.tar.gz
            mode: 0664

        - name: Untar cri-containerd-cni
          unarchive:
            src: /tmp/cri-containerd-cni-1.6.2-linux-arm64.tar.gz
            dest: /
            remote_src: yes
            extra_opts:
              - --no-overwrite-dir
      when: "cnc_version == 6.1 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '20' and ansible_architecture == 'aarch64'"

    - name: Install Containerd for NVIDIA Cloud Native Stack 6.2
      become: true
      block:
        - name: Download cri-containerd-cni
          get_url:
            url: https://github.com/containerd/containerd/releases/download/v1.6.5/cri-containerd-cni-1.6.5-linux-arm64.tar.gz
            dest: /tmp/cri-containerd-cni-1.6.5-linux-arm64.tar.gz
            mode: 0664

        - name: Untar cri-containerd-cni
          unarchive:
            src: /tmp/cri-containerd-cni-1.6.5-linux-arm64.tar.gz
            dest: /
            remote_src: yes
            extra_opts:
              - --no-overwrite-dir
      when: "cnc_version == 6.2 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '20' and ansible_architecture == 'aarch64'"

    - name: Install Containerd for NVIDIA Cloud Native Stack 7.0
      become: true
      block:
        - name: Download cri-containerd-cni
          get_url:
            url: https://github.com/containerd/containerd/releases/download/v1.6.6/cri-containerd-cni-1.6.6-linux-arm64.tar.gz
            dest: /tmp/cri-containerd-cni-1.6.6-linux-arm64.tar.gz
            mode: 0664

        - name: Untar cri-containerd-cni
          unarchive:
            src: /tmp/cri-containerd-cni-1.6.6-linux-arm64.tar.gz
            dest: /
            remote_src: yes
            extra_opts:
              - --no-overwrite-dir
      when: "cnc_version == 7.0 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '20' and ansible_architecture == 'aarch64'"

    - name: Install Containerd for NVIDIA Cloud Native Stack 6.3 or 7.1 or 8.0
      become: true
      block:
        - name: Download cri-containerd-cni
          get_url:
            url: https://github.com/containerd/containerd/releases/download/v1.6.8/cri-containerd-cni-1.6.8-linux-arm64.tar.gz
            dest: /tmp/cri-containerd-cni-1.6.8-linux-arm64.tar.gz
            mode: 0664

        - name: Untar cri-containerd-cni
          unarchive:
            src: /tmp/cri-containerd-cni-1.6.8-linux-arm64.tar.gz
            dest: /
            remote_src: yes
            extra_opts:
              - --no-overwrite-dir
      when: "cnc_version == 6.3 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '20' and ansible_architecture == 'aarch64' or cnc_version == 7.1 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '20' and ansible_architecture == 'aarch64' or cnc_version == 8.0 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '20' and ansible_architecture == 'aarch64'"

    - name: Install Containerd for NVIDIA Cloud Native Stack 7.2 or 8.1
      become: true
      block:
        - name: Download cri-containerd-cni
          get_url:
            url: https://github.com/containerd/containerd/releases/download/v1.6.10/cri-containerd-cni-1.6.10-linux-arm64.tar.gz
            dest: /tmp/cri-containerd-cni-1.6.10-linux-arm64.tar.gz
            mode: 0664

        - name: Untar cri-containerd-cni
          unarchive:
            src: /tmp/cri-containerd-cni-1.6.10-linux-arm64.tar.gz
            dest: /
            remote_src: yes
            extra_opts:
              - --no-overwrite-dir
      when: "cnc_version == 6.4 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '20' and ansible_architecture == 'aarch64'  or cnc_version == 7.2 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '20' and ansible_architecture == 'aarch64' or cnc_version == 8.1 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '20' and ansible_architecture == 'aarch64'"

    - name: Configure Containerd for NVIDIA Cloud Native Stack
      become: true
      block:
        - name: Get defaults from containerd
          command: containerd config default
          changed_when: false
          register: containerd_config_default

        - name: Write defaults to config.toml
          copy:
            dest: /etc/containerd/config.toml
            content: "{{ containerd_config_default.stdout }}"

        - name: restart containerd
          service:
            name: containerd
            state: restarted
            daemon_reload: yes
      when: "cnc_version >= 4.1 and ansible_distribution == 'Ubuntu'"

    - name: Update Containerd for NVIDIA Cloud Native Stack
      become: true
      block:
        - name: Enable systemd cgroups
          shell: sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

        - name: restart containerd
          service:
            name: containerd
            state: restarted
            daemon_reload: yes
      when: "cnc_version >= 4.1 and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '22' and'running' not in k8sup.stdout"

    - name: Add Containerd Proxy configuration
      become: true
      block:
        - name: Get Host IP
          shell: interface=$(ip a | grep 'state UP' |  egrep 'enp*|ens*|eno*|enc*|eth*|bond*|wlan*' | awk '{print $2}' | sed 's/://g'); for i in $interface; do ifconfig $i | grep -iw inet | awk '{print $2}'; done
          register: network

        - name: subnet
          shell: echo {{ network.stdout_lines[0] }} | cut -d. -f1-3
          register: subnet

        - name: Create containerd.service.d
          file:
            path: /etc/systemd/system/containerd.service.d
            state: directory
            recurse: yes

        - name: create http-proxy.conf
          lineinfile:
            create: yes
            mode: 666
            path: /etc/systemd/system/containerd.service.d/http-proxy.conf
            line: "{{ item }}"
          loop:
          - "[Service]"
          - "Environment='NO_PROXY={{ network.stdout_lines[0] }},localhost,127.0.0.0/8,10.96.0.1/24,10.244.0.0/16,192.168.32.0/22,{{ subnet.stdout }}.0/24'"
          - "Environment='HTTPS_PROXY={{ https_proxy }}'"
          - "Environment='HTTP_PROXY={{ http_proxy }}'"

        - name: restart containerd
          service:
            name: containerd
            state: restarted
            daemon_reload: yes
      when: "proxy == true and cnc_version >= 6.1"

    - name: Starting and enabling the required services
      become: true
      when: "'running' not in k8sup.stdout"
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      failed_when: false
      with_items:
        - docker
        - kubelet
        - containerd

    - name: Check If Helm is Installed
      shell: command -v helm >/dev/null 2>&1
      register: helm_exists
      no_log: True
      failed_when: false

    - name: "Install Helm on NVIDIA Cloud Native Stack 5.0"
      become: true
      command: "{{ item }}"
      with_items:
        - curl -O https://get.helm.sh/helm-v3.6.2-linux-amd64.tar.gz
        - tar -xvzf helm-v3.6.2-linux-amd64.tar.gz
        - cp linux-amd64/helm /usr/local/bin/
        - rm -rf helm-v3.6.2-linux-amd64.tar.gz linux-amd64
      when: "cnc_version == 5.1 and ansible_architecture == 'x86_64' or cnc_version == 5.0 and ansible_architecture == 'x86_64'  and ansible_architecture == 'x86_64'"

    - name: "Install Helm on NVIDIA Cloud Native Stack 6.0"
      become: true
      command: "{{ item }}"
      with_items:
        - curl -O https://get.helm.sh/helm-v3.8.0-linux-amd64.tar.gz
        - tar -xvzf helm-v3.8.0-linux-amd64.tar.gz
        - cp linux-amd64/helm /usr/local/bin/
        - rm -rf helm-v3.8.0-linux-amd64.tar.gz linux-amd64
      when: "cnc_version == 6.0 and ansible_architecture == 'x86_64'"

    - name: "Install Helm on NVIDIA Cloud Native Stack 6.1"
      become: true
      command: "{{ item }}"
      with_items:
        - curl -O https://get.helm.sh/helm-v3.8.1-linux-amd64.tar.gz
        - tar -xvzf helm-v3.8.1-linux-amd64.tar.gz
        - cp linux-amd64/helm /usr/local/bin/
        - chmod 755 /usr/local/bin/helm
        - rm -rf helm-v3.8.1-linux-amd64.tar.gz linux-amd64
      when: "cnc_version == 6.1 and ansible_architecture == 'x86_64'"

    - name: "Install Helm on NVIDIA Cloud Native Stack 5.2 or 6.2"
      become: true
      command: "{{ item }}"
      with_items:
        - curl -O https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz
        - tar -xvzf helm-v3.8.2-linux-amd64.tar.gz
        - cp linux-amd64/helm /usr/local/bin/
        - chmod 755 /usr/local/bin/helm
        - rm -rf helm-v3.8.2-linux-amd64.tar.gz linux-amd64
      when: "cnc_version == 6.2 and ansible_architecture == 'x86_64' or cnc_version == 5.2 and ansible_architecture == 'x86_64'"

    - name: "Install Helm on NVIDIA Cloud Native Stack 7.0"
      become: true
      command: "{{ item }}"
      with_items:
        - curl -O https://get.helm.sh/helm-v3.9.0-linux-amd64.tar.gz
        - tar -xvzf helm-v3.9.0-linux-amd64.tar.gz
        - cp linux-amd64/helm /usr/local/bin/
        - chmod 755 /usr/local/bin/helm
        - rm -rf helm-v3.9.0-linux-amd64.tar.gz linux-amd64
      when: "cnc_version == 7.0 and ansible_architecture == 'x86_64'"

    - name: "Install Helm on NVIDIA Cloud Native Stack 6.3 or 7.1 or 8.0"
      become: true
      command: "{{ item }}"
      with_items:
        - curl -O https://get.helm.sh/helm-v3.10.0-linux-amd64.tar.gz
        - tar -xvzf helm-v3.10.0-linux-amd64.tar.gz
        - cp linux-amd64/helm /usr/local/bin/
        - chmod 755 /usr/local/bin/helm
        - rm -rf helm-v3.10.0-linux-amd64.tar.gz linux-amd64
      when: "cnc_version == 6.3 and ansible_architecture == 'x86_64' or cnc_version == 7.1 and ansible_architecture == 'x86_64' or cnc_version == 8.0 and ansible_architecture == 'x86_64'"

    - name: "Install Helm on NVIDIA Cloud Native Stack 6.4 or 7.2 or 8.1"
      become: true
      command: "{{ item }}"
      with_items:
        - curl -O https://get.helm.sh/helm-v3.10.2-linux-amd64.tar.gz
        - tar -xvzf helm-v3.10.2-linux-amd64.tar.gz
        - cp linux-amd64/helm /usr/local/bin/
        - chmod 755 /usr/local/bin/helm
        - rm -rf helm-v3.10.2-linux-amd64.tar.gz linux-amd64
      when: "cnc_version == 6.4 and ansible_architecture == 'x86_64' or cnc_version == 7.2 and ansible_architecture == 'x86_64' or cnc_version == 8.1 and ansible_architecture == 'x86_64'"

    - name: "Install Helm on NVIDIA Cloud Native Stack 5.0"
      become: true
      command: "{{ item }}"
      with_items:
        - curl -O https://get.helm.sh/helm-v3.6.2-linux-arm64.tar.gz
        - tar -xvzf helm-v3.6.2-linux-arm64.tar.gz
        - cp linux-arm64/helm /usr/local/bin/
        - rm -rf helm-v3.6.2-linux-arm64.tar.gz linux-arm64
      when: "cnc_version == 5.1 and ansible_architecture == 'aarch64' or cnc_version == 5.0  and ansible_architecture == 'aarch64'"

    - name: "Install Helm on NVIDIA Cloud Native Stack 6.0"
      become: true
      command: "{{ item }}"
      with_items:
        - curl -O https://get.helm.sh/helm-v3.8.0-linux-arm64.tar.gz
        - tar -xvzf helm-v3.8.0-linux-arm64.tar.gz
        - cp linux-arm64/helm /usr/local/bin/
        - rm -rf helm-v3.8.0-linux-arm64.tar.gz linux-arm64
      when: "cnc_version == 6.0 and ansible_architecture == 'aarch64'"

    - name: "Install Helm on NVIDIA Cloud Native Stack 6.1"
      become: true
      command: "{{ item }}"
      with_items:
        - curl -O https://get.helm.sh/helm-v3.8.1-linux-arm64.tar.gz
        - tar -xvzf helm-v3.8.1-linux-arm64.tar.gz
        - cp linux-arm64/helm /usr/local/bin/
        - chmod 755 /usr/local/bin/helm
        - rm -rf helm-v3.8.1-linux-arm64.tar.gz linux-arm64
      when: "cnc_version == 6.1 and ansible_architecture == 'aarch64'"

    - name: "Install Helm on NVIDIA Cloud Native Stack 5.2 or 6.2"
      become: true
      command: "{{ item }}"
      with_items:
        - curl -O https://get.helm.sh/helm-v3.8.2-linux-arm64.tar.gz
        - tar -xvzf helm-v3.8.2-linux-arm64.tar.gz
        - cp linux-arm64/helm /usr/local/bin/
        - chmod 755 /usr/local/bin/helm
        - rm -rf helm-v3.8.2-linux-arm64.tar.gz linux-arm64
      when: "cnc_version == 6.2 and ansible_architecture == 'aarch64' or cnc_version == 5.2 and ansible_architecture == 'aarch64'"

    - name: "Install Helm on NVIDIA Cloud Native Stack 7.0"
      become: true
      command: "{{ item }}"
      with_items:
        - curl -O https://get.helm.sh/helm-v3.9.0-linux-arm64.tar.gz
        - tar -xvzf helm-v3.9.0-linux-arm64.tar.gz
        - cp linux-arm64/helm /usr/local/bin/
        - chmod 755 /usr/local/bin/helm
        - rm -rf helm-v3.9.0-linux-arm64.tar.gz linux-arm64
      when: "cnc_version == 7.0 and ansible_architecture == 'aarch64'"

    - name: "Install Helm on NVIDIA Cloud Native Stack 6.3 or 7.1 or 8.0"
      become: true
      command: "{{ item }}"
      with_items:
        - curl -O https://get.helm.sh/helm-v3.10.0-linux-arm64.tar.gz
        - tar -xvzf helm-v3.10.0-linux-arm64.tar.gz
        - cp linux-arm64/helm /usr/local/bin/
        - chmod 755 /usr/local/bin/helm
        - rm -rf helm-v3.10.0-linux-arm64.tar.gz linux-arm64
      when: "cnc_version == 6.3 and ansible_architecture == 'aarch64' or cnc_version == 7.1 and ansible_architecture == 'aarch64' or cnc_version == 8.0 and ansible_architecture == 'aarch64'"

    - name: "Install Helm on NVIDIA Cloud Native Stack 6.4 or 7.2 or 8.1"
      become: true
      command: "{{ item }}"
      with_items:
        - curl -O https://get.helm.sh/helm-v3.10.2-linux-arm64.tar.gz
        - tar -xvzf helm-v3.10.2-linux-arm64.tar.gz
        - cp linux-arm64/helm /usr/local/bin/
        - chmod 755 /usr/local/bin/helm
        - rm -rf helm-v3.10.2-linux-arm64.tar.gz linux-arm64
      when: " cnc_version == 6.4 and ansible_architecture == 'aarch64' or cnc_version == 7.2 and ansible_architecture == 'aarch64' or cnc_version == 8.1 and ansible_architecture == 'aarch64'"