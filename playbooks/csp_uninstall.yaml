- hosts: localhost
  gather_facts: yes
  vars_files:
    - csp_values.yaml
    - cnc_values.yaml
  environment:
    PATH: "{{ ansible_env.PATH }}:{{lookup('pipe', 'pwd')}}/google-cloud-sdk/bin/"
  tasks:

   - name: Uninstall Helm Charts on NVIDIA Cloud Native Stack
     ignore_errors: true
     async: 120
     shell: |
       count=$(helm ls -A | egrep 'gpu-operator|network-operator' | grep -v NAME | wc -l)
       if [[ $count > 0 ]]; then
        for name in `helm ls -A | awk '{print $1}' | grep -v NAME`
        do
          for namespace in `helm ls -A | grep $name |  awk '{print $2}' | grep -v NAMESPACE`
            do
              helm del $name -n $namespace --wait
              pods=$(kubectl get pods -n $namespace | grep -v NAME | wc -l)
              while [ $pods != 0 ]
              do
                sleep 10
                pods=$(kubectl get pods -n $namespace | grep -v NAME | wc -l)
              done
            done
        done
       fi
     args:
      executable: /bin/bash

   - name: Delete GKE Cluster
     shell: "gcloud  beta container clusters delete {{ gke_cluster_name }}  --zone {{ gke_zone }} --quiet"
     when: "installon_gke == true"

   - name: delete the GKE binaries
     shell: "rm -rf {{lookup('pipe', 'pwd')}}/google-cloud-sdk* {{ ansible_user_dir }}/.config/gcloud"
     when: "installon_gke == true"
     ignore_errors: true

   - name: delete gcloud path on Linux
     when: "installon_gke == true and ansible_system == 'Linux'"
     lineinfile:
       path: "{{ ansible_user_dir }}/.bashrc"
       regexp: '^PATH=(.*)/google-cloud-sdk/bin/(.*)'
       backrefs: yes
       state: absent

   - name: delete gcloud path on Darwin
     when: "installon_gke == true and ansible_system == 'Darwin'"
     lineinfile:
       path: "{{ ansible_user_dir }}/.zshrc"
       regexp: '^PATH=(.*)/google-cloud-sdk/bin/(.*)'
       backrefs: yes
       state: absent


   - name: Delete EKS cluster
     when: installon_eks == true
     shell: "eksctl delete cluster -f {{lookup('pipe', 'pwd')}}/eks_cluster_config.yaml"

   - name: Delete the EKS details
     shell: "rm -rf {{ ansible_user_dir }}/.aws"
     when: installon_eks == true

   - name: delete AKS cluster
     when: installon_aks == true 
     shell: "az aks delete -n {{ aks_cluster_name }} -g {{ azure_resource_group }} --yes"

   - name: Delete the AKS details
     shell: "rm -rf {{ ansible_user_dir }}/.azure"
     when: installon_aks == true