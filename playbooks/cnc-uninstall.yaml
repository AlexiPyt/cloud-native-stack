- hosts: master
  gather_facts: yes
  vars_files:
    - cnc_values.yaml
  tasks:

   - name: Uninstall the GPU Operator with MIG
     shell: |
       kubectl label nodes --all nvidia.com/mig.config=all-disabled --overwrite
       sleep 5
       config_state=$(kubectl describe nodes  |grep mig.config.state |head -n1 | awk -F'=' '{print $2}')
       while [ $config_state != "success" ]
       do
         sleep 5
         config_state=$(kubectl describe nodes  |grep mig.config.state | head -n1 |awk -F'=' '{print $2}')
       done
     when: "enable_mig == true and cnc_version >= 4.1 and ansible_architecture == 'x86_64'"
     #failed_when: false
     async: 120
     args:
       executable: /bin/bash
       
- hosts: all
  gather_facts: yes
  become: true
  vars_files:
    - cnc_values.yaml
  tasks:

   - name: Reset Kubernetes component
     shell: "timeout 45 kubeadm reset --force"
     failed_when: false
     no_log: True

   - name: Remove Conatinerd and Kubernetes packages for Ubuntu
     when: "ansible_distribution == 'Ubuntu' and cnc_version >= 4.0"
     ignore_errors: yes
     apt:
       name: ['kubectl', 'kubeadm','kubelet', 'containerd']
       state: absent
       purge: yes
       force: yes

   - name: Remove Docker and Kubernetes packages for Ubuntu
     when: "ansible_distribution == 'Ubuntu' and cnc_version <= 3.1"
     ignore_errors: yes
     apt:
       name: ['kubectl', 'kubeadm','kubelet', 'docker-ce*']
       state: absent
       purge: yes
       force: yes

   - name: Remove installed packages for RHEL/CentOS
     when:  "ansible_distribution in ['RedHat', 'CentOS']"
     ignore_errors: yes
     yum:
       name: ['kubectl', 'kubeadm','kubelet', 'docker*']
       state: absent
       force: yes

   - name: IPTables Cleanup
     ignore_errors: yes
     become: true
     shell: "iptables -F"

   - name: Cleanup Directories
     ignore_errors: yes
     file:
       path: "{{ item }}"
       state: absent
     with_items:
        - /var/lib/etcd
        - /etc/kubernetes
        - /usr/local/bin/helm
        - /var/lib/containerd
        - /var/lib/crio
        - /run/containerd
        - /etc/containerd
        - /etc/crio
        - /usr/local/bin/crio
        - /var/log/containers
        - /etc/apt/sources.list.d/devel*
        - /etc/sysctl.d/99-kubernetes-cri.conf
        - /etc/modules-load.d/containerd.conf
        - /etc/modules-load.d/crio.conf
        - /etc/apt/trusted.gpg.d/libcontainers*
        - /etc/default/kubelet
        - /etc/cni/net.d
