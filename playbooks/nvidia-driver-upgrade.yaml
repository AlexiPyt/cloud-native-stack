- hosts: all
  become: true
  vars_files:
    - cnc_values.yaml
  become_method: sudo
  tasks:
    - name: Update Containerd Runtime for NVIDIA Cloud Native Stack
      become: true
      block:
        - name: Write defaults to config.toml
          get_url:
            dest: /etc/containerd/config.toml
            url: https://raw.githubusercontent.com/NVIDIA/cloud-native-stack/master/playbooks/config.toml
            mode: 0664

        - name: Enable systemd cgroups
          shell: sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

        - name: restart containerd
          service:
            name: containerd
            state: restarted
            daemon_reload: yes
      when: "cnc_docker == true and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '20'"

    - name: Check NVIDIA Driver Modules are loaded
      shell: "lsmod | grep -i nvidia"
      register: nvidia_mod
      no_log: True
      failed_when: false

    - name: Check NVIDIA SMI loaded
      shell: "nvidia-smi"
      register: nvidia_smi
      no_log: True
      failed_when: false

    - name: NVIDIA Driver Clean Up
      when:  cnc_version >= 6.1 and nvidia_mod.rc == 0 and nvidia_smi.rc == 0
      block:
        - name: Remove Ubuntu unattended upgrades to prevent apt lock
          ansible.builtin.apt:
            name: unattended-upgrades
            state: absent
            purge: yes
          register: apt_cleanup
          retries: 10
          until: apt_cleanup is success

        - name: Remove OLD Apt Repository
          apt_repository:
            repo: ppa:graphics-drivers/ppa
            state: absent
          register: ppa_clean
          retries: 10
          until: ppa_clean is success

        - name: Remove NVIDIA packages
          apt:
            name:
            - "*cuda*"
            - "libnvidia-cfg1-*"
            - "libnvidia-common-*"
            - "libnvidia-compute-*"
            - "libnvidia-decode-*"
            - "libnvidia-encode-*"
            - "libnvidia-extra-*"
            - "libnvidia-fbc1-*"
            - "libnvidia-gl-*"
            - "nvidia-compute-utils-*"
            - "nvidia-dkms-*"
            - "nvidia-driver-*"
            - "nvidia-kernel-common-*"
            - "nvidia-kernel-source-*"
            - "nvidia-modprobe"
            - "nvidia-prime"
            - "nvidia-settings"
            - "nvidia-utils-*"
            - "screen-resolution-extra"
            - "xserver-xorg-video-nvidia-*"
            - "gdm*"
            - "xserver-xorg-*"
            autoremove: yes
            purge: yes
            state: absent
          register: nvidia_cleanup
          retries: 10
          until: nvidia_cleanup is success

        - name: Remove old keyring
          shell:
            cmd: "apt-key del 7fa2af80"

    - name: Add CUDA APT Key
      become: true
      when:  "cnc_version == 6.3 and nvidia_mod.rc == 0 and nvidia_smi.rc == 0 and ansible_architecture == 'x86_64'"
      apt:
        deb: https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb
        state: "present"
      register: cuda_ring
      retries: 10
      until: cuda_ring is success

    - name: Add CUDA APT Key
      become: true
      when:  "cnc_version == 7.1 and nvidia_mod.rc == 0 and nvidia_smi.rc == 0 and ansible_architecture == 'x86_64' and ansible_distribution_major_version >= '22' or cnc_version == 8.0 and nvidia_mod.rc == 0 and nvidia_smi.rc == 0 and ansible_architecture == 'x86_64' and ansible_distribution_major_version >= '22'"
      apt:
        deb: https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.0-1_all.deb
        state: "present"
      register: cuda_ring
      retries: 10
      until: cuda_ring is success

    - name: Add CUDA APT Key
      become: true
      when:  "cnc_version == 7.2 and nvidia_mod.rc == 0 and nvidia_smi.rc == 0 and ansible_architecture == 'x86_64' and ansible_distribution_major_version >= '22' or cnc_version == 8.1 and nvidia_mod.rc == 0 and nvidia_smi.rc == 0 and ansible_architecture == 'x86_64' and ansible_distribution_major_version >= '22'"
      apt:
        deb: https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.0-1_all.deb
        state: "present"
      register: cuda_ring
      retries: 10
      until: cuda_ring is success

    - name: Add CUDA APT Key
      become: true
      when:  "cnc_version == 6.3 and nvidia_mod.rc == 0 and nvidia_smi.rc == 0 and ansible_architecture == 'aarch64' and ansible_distribution_major_version == '20' "
      apt:
        deb: https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/sbsa/cuda-keyring_1.0-1_all.deb
        state: "present"
      register: cuda_ring
      retries: 10
      until: cuda_ring is success

    - name: Install NVIDIA TRD Driver
      become: true
      when:  "cnc_version == 7.1 and nvidia_mod.rc == 0 and nvidia_smi.rc == 0 and ansible_architecture == 'aarch64' and ansible_distribution_major_version >= '22' or cnc_version == 8.0 and nvidia_mod.rc == 0 and nvidia_smi.rc == 0 and ansible_architecture == 'aarch64' and ansible_distribution_major_version >= '22' "
      apt:
        deb: https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/sbsa/cuda-keyring_1.0-1_all.deb
        state: "present"
      register: cuda_ring
      retries: 10
      until: cuda_ring is success

    - name: Install NVIDIA TRD Driver
      become: true
      when:  "cnc_version == 7.2 and nvidia_mod.rc == 0 and nvidia_smi.rc == 0 and ansible_architecture == 'aarch64' and ansible_distribution_major_version >= '22' or cnc_version == 8.1 and nvidia_mod.rc == 0 and nvidia_smi.rc == 0 and ansible_architecture == 'aarch64' and ansible_distribution_major_version >= '22' "
      apt:
        deb: https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/sbsa/cuda-keyring_1.0-1_all.deb
        state: "present"
      register: cuda_ring
      retries: 10
      until: cuda_ring is success

    - name: Install NVIDIA TRD Driver
      become: true
      when:  "nvidia_mod.rc == 0 and nvidia_smi.rc == 0 and cnc_version == 6.3 or nvidia_mod.rc == 0 and nvidia_smi.rc == 0 and cnc_version == 7.1 or nvidia_mod.rc == 0 and nvidia_smi.rc == 0 and cnc_version == 8.0"
      ignore_errors: true
      block:
        - name: Force an apt update
          apt:
            update_cache: true
          changed_when: false
          register: update
          retries: 10
          until: update is success

        - name: Ensure kmod is installed
          apt:
            name: "kmod"
            state: "present"
          register: kmod_check
          retries: 10
          until: kmod_check is success

        - name: Temporarily adjust account password policy
          shell: chage -d 1 root

        - name: Install driver packages
          apt:
            name: cuda=11.8.0-1
            state: present
          register: cuda_install
          retries: 10
          until: cuda_install is success

        - name: Setup root account password policy
          shell: chage -d 0 root

    - name: Install NVIDIA TRD Driver
      become: true
      when:  "nvidia_mod.rc == 0 and nvidia_smi.rc == 0 and cnc_version == 6.4 or nvidia_mod.rc == 0 and nvidia_smi.rc == 0 and cnc_version == 7.2 or nvidia_mod.rc == 0 and nvidia_smi.rc == 0 and cnc_version == 8.1"
      ignore_errors: true
      block:
        - name: Force an apt update
          apt:
            update_cache: true
          changed_when: false
          register: update
          retries: 10
          until: update is success

        - name: Ensure kmod is installed
          apt:
            name: "kmod"
            state: "present"
          register: kmod_check
          retries: 10
          until: kmod_check is success

        - name: Temporarily adjust account password policy
          shell: chage -d 1 root

        - name: Install driver packages
          apt:
            name: cuda
            state: present
          register: cuda_install
          retries: 10
          until: cuda_install is success

        - name: Setup root account password policy
          shell: chage -d 0 root