- hosts: master
  vars_files:
    - egx_version.yaml
  tasks:
   - name: Validate whether Kubernetes cluster installed
     shell: kubectl cluster-info
     register: k8sup
     ignore_errors: yes

   - name: Reset Kubernetes component
     become: true
     when: "'running' not in k8sup.stdout"
     shell: "kubeadm reset --force"
     register: reset_cluster

   - name: remove etcd directory
     become: true
     when: "'running' not in k8sup.stdout"
     file:
       path: "/var/lib/etcd"
       state: absent
   - name: Iniitialize the Kubernetes cluster using kubeadm and containerd
     when: "'running' not in k8sup.stdout and egx_version == 4.0"
     command: kubeadm init --pod-network-cidr=192.168.0.0/16 --cri-socket=/run/containerd/containerd.sock
     become: true
     register: kubeadm

   - name: Initialize the Kubernetes cluster using kubeadm
     when: "'running' not in k8sup.stdout and egx_version == 3.1"
     command: kubeadm init --pod-network-cidr=192.168.0.0/16
     become: true
     register: kubeadm

   - name: Create kube directory
     when: "'running' not in k8sup.stdout"
     file:
      path: $HOME/.kube
      state: directory

   - name: admin permissions
     become: true
     file:
       path: /etc/kubernetes/admin.conf
       mode: '0644'

   - name: Copy kubeconfig to home
     when: "'running' not in k8sup.stdout"
     copy:
       remote_src: yes
       src:  /etc/kubernetes/admin.conf
       dest:  $HOME/.kube/config
       mode: '0600'

   - name: Install networking plugin to kubernetes cluster on EGX DIY Stack 3.1 or 4.0
     when: "egx_version == 3.1 or  egx_version == 4.0 and 'running' not in k8sup.stdout"
     command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

   - name: Install networking plugin to kubernetes cluster on EGX DIY Stack 2.0
     when: "'running' not in k8sup.stdout and egx_version == 2.0"
     command: kubectl apply -f https://docs.projectcalico.org/v3.11/manifests/calico.yaml

   - name: Install networking plugin to kubernetes cluster on EGX DIY Stack 1.2 or 1.3
     when: "egx_version == 1.2 or egx_version == 1.3 and 'running' not in k8sup.stdout"
     command: kubectl apply -f https://docs.projectcalico.org/v3.9/manifests/calico.yaml

   - name: Update Networking Plugin for  on EGX DIY Stack 1.2 or 1.3
     when: "egx_version == 1.2 or egx_version == 1.3 and 'running' not in k8sup.stdout"
     command: kubectl -n kube-system set env daemonset/calico-node FELIX_IGNORELOOSERPF=true

   - name: Taint the Kubernetes Control Plane node
     when: "'running' not in k8sup.stdout"
     command: kubectl taint nodes --all node-role.kubernetes.io/master-

   - name: Generate join token
     become: true
     when: "'running' not in k8sup.stdout"
     shell: kubeadm token create --print-join-command
     register: kubeadm_join_cmd

   - set_fact:
       kubeadm_join: "{{ kubeadm_join_cmd.stdout }}"

   - name: Store join command
     become: true
     copy: 
       content: "{{ kubeadm_join }}" 
       dest: "/tmp/kubeadm-join.command"

- hosts: node
  tasks:
   - name: Reset Kubernetes component
     become: true
     shell: "kubeadm reset --force"
     register: reset_cluster

   - name: Create kube directory
     become: true
     file:
       path: /etc/kubernetes
       state: directory

   - name: Copy kubeadm-join command to node
     become: true
     copy:
       src: "/tmp/kubeadm-join.command"
       dest: "/tmp/kubeadm-join.command"

- hosts: node
  vars:
     kubeadm_join: "{{ lookup('file', '/tmp/kubeadm-join.command') }}"
  tasks:

   - name: Run kubeadm join
     become: true
     shell: "{{ kubeadm_join }}"

- hosts: master
  vars_files:
    - egx_version.yaml
  tasks:
   - name: Validate whether Kubernetes cluster installed
     shell: kubectl cluster-info
     register: k8sup
     ignore_errors: yes

   - name: Get Node name
     shell: "kubectl get nodes  | grep -v master | awk '{print $1}' | grep -v NAME"
     register: node_name
     ignore_errors: yes
     when: "'running' in k8sup.stdout"

   - name: Lable the node
     shell: "kubectl label node {{ item }} node-role.kubernetes.io/node="
     with_items: "{{ node_name.stdout_lines }}"
     when: "'running' in k8sup.stdout"
     ignore_errors: true

   - name: Check If Helm is Installed
     shell: command -v helm >/dev/null 2>&1
     register: helm_exists
     ignore_errors: yes

   - name: "Install Helm on EGX DIY 1.2 or 2.0"
     become: true
     command: "{{ item }}"
     args:
       warn: false
     with_items:
       - curl -O https://get.helm.sh/helm-v3.1.0-linux-amd64.tar.gz
       - tar -xvzf helm-v3.1.0-linux-amd64.tar.gz
       - cp linux-amd64/helm /usr/bin/
       - rm -rf helm-v3.1.0-linux-amd64.tar.gz linux-amd64
     when: "egx_version == 1.2 or egx_version == 2.0 and helm_exists.rc > 0"

   - name: Installing the GPU Operator on EGX DIY 1.2 or 2.0
     become: true
     when: "egx_version == 1.2 or egx_version == 2.0 and 'running' in k8sup.stdout"
     command: "{{ item }}"
     args:
       warn: false
     with_items:
        - helm repo add nvidia https://nvidia.github.io/gpu-operator 
        - helm repo update
        - helm install --version 1.1.7 --devel nvidia/gpu-operator --wait --generate-name

   - name: "Install Helm on EGX DIY Stack 3.1 or 1.3"
     become: true
     command: "{{ item }}"
     args:
       warn: false
     with_items:
       - curl -O https://get.helm.sh/helm-v3.3.3-linux-amd64.tar.gz
       - tar -xvzf helm-v3.3.3-linux-amd64.tar.gz
       - cp linux-amd64/helm /usr/local/bin/
       - rm -rf helm-v3.3.3-linux-amd64.tar.gz linux-amd64
     when: "egx_version == 1.3 or egx_version == 3.1 and helm_exists.rc > 0"

   - name: "Install Helm on EGX DIY Stack 4.0"
     become: true
     command: "{{ item }}"
     args:
       warn: false
     with_items:
       - curl -O https://get.helm.sh/helm-v3.5.4-linux-amd64.tar.gz
       - tar -xvzf helm-v3.5.4-linux-amd64.tar.gz
       - cp linux-amd64/helm /usr/local/bin/
       - rm -rf helm-v3.5.4-linux-amd64.tar.gz linux-amd64
     when: "egx_version == 4.0 and helm_exists.rc > 0"

   - name: Installing the GPU Operator on EGX DIY Stack 3.0
     when: "egx_version == 1.3 or egx_version == 3.1 and 'running' in k8sup.stdout"
     command: "{{ item }}"
     args:
       warn: false
     with_items:
        - helm repo add nvidia https://helm.ngc.nvidia.com/nvidia --force-update
        - helm repo update
        - helm install --version 1.6.2 --devel nvidia/gpu-operator --wait --generate-name

   - name: Installing the GPU Operator on EGX DIY Stack 4.0
     when: "egx_version == 4.0 and 'running' in k8sup.stdout"
     command: "{{ item }}"
     args:
       warn: false
     with_items:
        - helm repo add nvidia https://helm.ngc.nvidia.com/nvidia --force-update
        - helm repo update
        - helm install --version 1.7.0 --devel nvidia/gpu-operator --set operator.defaultRuntime=containerd --wait --generate-name 
